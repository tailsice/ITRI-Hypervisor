#!/usr/bin/expect
#### Basci Setting ###
set login_ip 127.0.0.1
set username root
set pwd kvmarm
set vmusername root
set vmpwd root
set programpath /home/hypervisor/kvm
set programpath2 /home/hypervisor/kvm2
set jenkins_file /srv/test.tap
set localMachine_ip 192.168.20.1
set hostA_ip 192.168.20.100
set hostB_ip 192.168.20.101
set VMA_ip 192.168.20.2
set VMC_ip 192.168.20.4
set send_slow {1 .01}
#######################

proc FAIL {} {
global username
global pwd
global login_ip
global jenkins_file
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

send -s "\r"
expect $tip { puts "##FAIL##"}
}

proc PASS {} {
global username
global pwd
global login_ip
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

send -s "\r"
expect $tip { puts "##PASS##";send -s "\r"}
}

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu1 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu2 $spawn_id

set spawn_id $cpu1

set timeout 250
send -s "\r"
expect {
 $tip { send -s "cd $programpath2\r" }
 timeout {FAIL;exit}
}
expect { 
 $tip { send -s "./start2.sh\r"}
 timeout {FAIL;exit}
}
expect {
 "root@linaro" {}
 timeout {FAIL;exit}
}

set spawn_id $cpu2

send -s "\r"
expect {
 $tip {send -s "ssh $vmusername@$hostB_ip\r"}
 timeout {FAIL;exit}
}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect {
 $tip { send -s "insmod \/root\/kvm\/kvm.ko\r" }
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "mount $localMachine_ip\:\/mnt\/iso \/mnt\r" }
 timeout {FAIL;exit}
}
expect { 
 $tip { send -s "chmod +x start1\-vdisk.sh\r" }
 timeout {FAIL;exit}
}
expect {
 $tip { send -s ".\/start1\-vdisk.sh\r" }
 timeout {FAIL;exit}
}
expect { 
 "root@vm" { send -s "\r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 \r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 down \r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 hw ether 00 11 22 33 44 55\r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 up\r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 192.168.20.2\r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ifconfig eth0 \r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "/etc/init.d/networking restart\r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "ping $localMachine_ip \r" }
 timeout {FAIL;exit}
}
set timeout 10
expect {
 "Network is unreachable" {FAIL;exit}
 timeout {FAIL;exit}
 -ex "64"
}
PASS
