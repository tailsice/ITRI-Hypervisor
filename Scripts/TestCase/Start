#!/usr/bin/expect
#### Basci Setting ###
set login_ip 127.0.0.1
set username root
set pwd kvmarm
set vmusername root
set vmpwd root
set programpath /home/hypervisor/kvm
set programpath2 /home/hypervisor/kvm2
set launchPath /srv/Scripts
set jenkins_path /var/lib/jenkins/jobs/TestRun/workspace
set localMachine_ip 192.168.20.1
set hostA_ip 192.168.20.100
set hostB_ip 192.168.20.101
set send_slow {1 .01}
#######################

set ENV [lindex $argv 0]
set SCRIPT [lindex $argv 1]
set jenkins_file [lindex $argv 2]
set jenkins_file $jenkins_file.tap

proc FAIL {} {
global username
global pwd
global login_ip
global jenkins_path
global jenkins_file
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

send -s "\r"
expect $tip { puts "### FAIL ###"}
send -s "\r"
expect $tip { send -s "echo \"1..1\" \>\> $jenkins_path/$jenkins_file \r" }
expect $tip { send -s "echo \"not ok 1 It is failed\" \>\> $jenkins_path/$jenkins_file \r" }
expect $tip { exit}
}

proc PASS {} {
global username
global pwd
global login_ip
global jenkins_path
global jenkins_file
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

send -s "\r"
expect $tip { send -s "echo \"1..1\" \>\> $jenkins_path/$jenkins_file \r" }
expect $tip { send -s "echo \"ok 1 The test is pass\" \>\> $jenkins_path/$jenkins_file \r" }
expect $tip { puts "### PASS ###";exit}
}


set timeout 180

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu1 $spawn_id

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu2 $spawn_id

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu3 $spawn_id

set spawn_id $cpu1

set timeout 250
send -s "cd $programpath\r"
expect {
 $tip { send -s "./start.sh\r"}
 timeout {FAIL;exit}
}
expect { 
 "root@linaro" {}
 timeout {FAIL;exit}
}

set spawn_id $cpu2

send -s "cd $programpath2\r"
expect {
 $tip { send -s "./start2.sh\r"}
 timeout {FAIL;exit}
}
expect {
 "root@linaro" {}
 timeout {FAIL;exit}
}

set spawn_id $cpu1

send -s "\r"
expect {
 $tip { send -s "mount \-t nfs $localMachine_ip:/mnt/iso /mnt \r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "cp \-a /mnt/launchScript/$ENV/\*.sh /root/kvm/ \r" }
 timeout {FAIL;exit}
}
#expect {
# $tip { send -s "cp \-a /mnt/Script/\*.sh /root/kvm/ \r" }
# timeout {FAIL;exit}
#}
expect {
 $tip { send -s "sync\r" }
 timeout {FAIL;exit}
}
expect {
 $tip {}
 timeout {FAIL;exit}
}

set spawn_id $cpu2

send -s "\r"
expect {
 $tip { send -s "mount \-t nfs $localMachine_ip:/mnt/iso /mnt \r"}
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "cp \-a /mnt/launchScript/$ENV/\*.sh /root/kvm/ \r" }
 timeout {FAIL;exit}
}
#expect {
# $tip { send -s "cp \-a /mnt/Script/\*.sh /root/kvm/ \r" }
# timeout {FAIL;exit}
#}
expect {
 $tip { send -s "sync\r"}
 timeout {FAIL;exit}
}
expect {
 $tip {}
 timeout {FAIL;exit}
}

set spawn_id $cpu3
send -s "\r"
expect {
 $tip { send -s "killall qemu-system-arm \r" }
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "cd $launchPath\r" }
 timeout {FAIL;exit}
}
expect {
 $tip { send -s "expect $SCRIPT $jenkins_file\r" }
 timeout {FAIL;exit}
}

set timeout 2000

expect {
 "##PASS##" {PASS}
 "##FAIL##" {FAIL}
 timeout {FAIL;exit}
}
