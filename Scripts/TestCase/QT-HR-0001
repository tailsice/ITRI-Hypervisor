#!/usr/bin/expect
#### Basci Setting ###
set login_ip 127.0.0.1
set username root
set pwd kvmarm
set vmusername root
set vmpwd root
set programpath /home/hypervisor/kvm
set programpath2 /home/hypervisor/kvm2
set localMachine_ip 192.168.20.1
set hostA_ip 192.168.20.100
set hostB_ip 192.168.20.101
set jenkins_path /var/lib/jenkins/jobs/TestRun/workspace
set vmA_ip 192.168.20.2
set send_slow {1 .01}
######################

set jenkins_file [lindex $argv 0]

proc FAIL {} {
global username
global pwd
global login_ip
global jenkins_path
global jenkins_file
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "\r"
expect $tip { puts "##FAIL##"}
#send -s "\r"
#expect $tip { send -s "echo \"1..1\" \>\> $jenkins_path/$jenkins_file \r" }
#expect $tip { send -s "echo \"not ok 1 It is failed\" \>\> $jenkins_path/$jenkins_file \r" }
#expect $tip {puts "END"}
}

proc PASS {} {
global username
global pwd
global login_ip
global jenkins_path
global jenkins_file
spawn ssh $username@$login_ip
set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "\r"
#expect $tip { send -s "echo \"1..1\" \>\> $jenkins_path/$jenkins_file \r" }
#expect $tip { send -s "echo \"ok 1 The test is pass\" \>\> $jenkins_path/$jenkins_file \r" }
expect $tip { puts "##PASS##"}
}

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu1 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu2 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu3 $spawn_id

set spawn_id $cpu1

set timeout 250
send -s "\r"
expect $tip { send -s "cd $programpath2\r" }
expect $tip { send -s "\.\/start2.sh\r"}
expect "root@linaro"

#puts "linaro start up!"

set spawn_id $cpu2

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostB_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "insmod \/root\/kvm\/kvm.ko\r" }
expect $tip { send -s "mount $localMachine_ip\:\/mnt\/iso \/mnt\r" }
expect $tip { send -s "chmod +x start1\-vdisk.sh\r" }
expect $tip { send -s ".\/start1\-vdisk.sh\r" }
expect "root@vm" { send -s "echo \$HOSTNAME\r" }
expect "vm" { send -s "\/etc\/init.d\/ssh start\r" }
expect $tip { send -s "mount \/dev\/pts\r" }
expect $tip

set spawn_id $cpu1
set timeout 5
send -s "\r"
expect $tip { send -s "echo \"c\" \> /proc/sysrq\-trigger\r" }
expect {
  $tip { send -s "\r" }
  timeout { puts " ### Crash It ### ";FAIL }
}

end -s "\r"
expect $tip { PASS}
puts "END"

