#!/usr/bin/expect
#### Basci Setting ###
set login_ip 127.0.0.1
set username root
set pwd qwer
set vmusername root
set vmpwd root
set reporter chkao
set reporter_pwd abc123
set programpath /home/tailsice/install/linaro+libvirt
set programpath2 /home/tailsice/install/migration
set localMachine_ip 192.168.101.1
set hostA_ip 192.168.101.2
set hostB_ip 192.168.101.101
set send_slow {1 .01}
#######################

spawn ssh $username@$login_ip

set tip "#"
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip 
}

set cpu1 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu2 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu3 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu4 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu5 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu6 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu7 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu8 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu9 $spawn_id

spawn ssh $username@$login_ip
set timeout 10
expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$pwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}

set cpu10 $spawn_id

set spawn_id $cpu1

set timeout 250
send -s "cd $programpath\r"
expect $tip { send -s "\.\/start.sh\r"}
#expect "root@linaro"

#puts "linaro start up!"

set spawn_id $cpu2

set timeout 250
send -s "cd $programpath2\r"
send -s "\.\/start2.sh\r"
expect "root@linaro"

set spawn_id $cpu3

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostA_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "insmod \/root\/kvm\/kvm.ko\r" }
expect $tip { send -s "mount $localMachine_ip\:\/mnt\/iso \/mnt\r" }
expect $tip { send -s "chmod +x receive\_vm1.sh\r" }
expect $tip { send -s "\.\/receive\_vm1.sh\r" }

sleep 5

set spawn_id $cpu4

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostA_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "chmod +x receive\_vm3.sh\r" }
expect $tip { send -s "\.\/receive\_vm3.sh\r" }

sleep 5

set spawn_id $cpu5

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostA_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "chmod +x receive\_vm4.sh\r" }
expect $tip { send -s "\.\/receive\_vm4.sh\r" }

sleep 5

set timeout 50

set spawn_id $cpu6

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostB_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "insmod \/root\/kvm\/kvm.ko\r" }
expect $tip { send -s "mount $localMachine_ip\:\/mnt\/iso \/mnt\r" }
expect $tip { send -s "\.\/start1\-vdisk.sh\r"}
expect "root@vm" { send -s "echo \$HOSTNAME\r" }
expect $tip { send -s "ping $localMachine_ip \r"}
expect "64"

set spawn_id $cpu7

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostB_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "\.\/start3\-vdisk.sh\r"}
expect "root@vm" { send -s "echo \$HOSTNAME\r" }
expect $tip { send -s "vmstat 1 \r"}

set spawn_id $cpu8

send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostB_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
send -s "cd \/root\/kvm\r"
expect $tip { send -s "\.\/start4\-vdisk.sh\r"}
expect "root@vm" { send -s "echo \$HOSTNAME\r" }
expect $tip { send -s "top\r"}
expect $tip { send -s "top \r"}

set spawn_id $cpu9
send -s "\r"
expect $tip {send -s "ssh $vmusername@$hostB_ip\r"}

expect {
  -ex "(yes/no)?" {send -s "yes\r"; exp_continue}
  "assword:"     {send -s "$vmpwd\r"; exp_continue}
  "No route to host"      {exit; exp_continue}
  timeout         {send_user "connect fail\r"; exit}
  -ex $tip
}
puts "### Start Migration ###"
set timeout 30
send -s "\r"
expect $tip { send -s "cd \/root\/kvm\r" }
expect $tip { send -s "\.\/migrate\_vm.sh 4444 1\r"}
expect "4444" { send -s "\r" }
expect "qemu" { send -s "\r"}
expect $tip { send -s "\.\/migrate\_vm.sh 5555 3\r"}
expect "5555" { send -s "\r" }
expect "qemu" { send -s "\r"}
expect $tip { send -s "\.\/migrate\_vm.sh 6666 4\r"}
expect "6666" { send -s "\r" }
expect "qemu" { send -s "\r"}
expect $tip

set spawn_id $cpu3
set timeout 10
send -s "\r"
expect "64" { send -s "" }
expect $tip

set spawn_id $cpu4
set timeout 100
send -s "\r"
expect "procs" { send -s "" }
expect $tip

set spawn_id $cpu5
set timeout 10
send -s "\r"
expect "root" { send -s "q" }
send -s ""
send -s "\r"
expect $tip

puts "End Program"
